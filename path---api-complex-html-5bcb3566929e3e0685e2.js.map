{"version":3,"sources":["webpack:///path---api-complex-html-5bcb3566929e3e0685e2.js","webpack:///./.cache/json/api-complex-html.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/api-complex-html.json","module","exports","data","file","relativePath","childRawHtml","content","pathContext"],"mappings":"AAAAA,cAAc,MAERC,0EACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,MACAC,aAAA,mBACAC,cACAC,QAAA,qoJAIAC,aACAH,aAAA","file":"path---api-complex-html-5bcb3566929e3e0685e2.js","sourcesContent":["webpackJsonp([277],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/api-complex-html.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"file\": {\n\t\t\t\t\"relativePath\": \"api/Complex.html\",\n\t\t\t\t\"childRawHtml\": {\n\t\t\t\t\t\"content\": \"<div class=\\\"ocamldoc\\\">\\n<div class=\\\"navbar\\\"><a class=\\\"pre\\\" href=\\\"Char.html\\\" title=\\\"Char\\\">Previous</a>\\n&#xA0;<a class=\\\"up\\\" href=\\\"index.html\\\" title=\\\"Index\\\">Up</a>\\n&#xA0;<a class=\\\"post\\\" href=\\\"Digest.html\\\" title=\\\"Digest\\\">Next</a>\\n</div>\\n<h1>Module <a href=\\\"type_Complex.html\\\">Complex</a></h1>\\n\\n<pre><span class=\\\"keyword\\\">module</span> Complex: sig .. end</pre><div class=\\\"info module top\\\">\\nComplex numbers.\\n<p>\\n\\n    This module provides arithmetic operations on complex numbers.\\n    Complex numbers are represented by their real and imaginary parts\\n    (cartesian representation).  Each part is represented by a\\n    double-precision floating-point number (type <code class=\\\"code\\\">float</code>).<br>\\n</p></div>\\n<hr width=\\\"100%\\\">\\n\\n<pre><span class=\\\"keyword\\\">type</span> t = {</pre><table class=\\\"typetable\\\">\\n<tbody><tr>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>&#xA0;&#xA0;</code></td>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>re&#xA0;: float;</code></td>\\n\\n</tr>\\n<tr>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>&#xA0;&#xA0;</code></td>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>im&#xA0;: float;</code></td>\\n\\n</tr></tbody></table>\\n}\\n\\n<div class=\\\"info \\\">\\nThe type of complex numbers.  <code class=\\\"code\\\">re</code> is the real part and <code class=\\\"code\\\">im</code> the\\n    imaginary part.<br>\\n</div>\\n\\n\\n<pre><span class=\\\"keyword\\\">let</span> zero: t;\\n</pre><div class=\\\"info \\\">\\nThe complex number <code class=\\\"code\\\">0</code>.<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> one: t;\\n</pre><div class=\\\"info \\\">\\nThe complex number <code class=\\\"code\\\">1</code>.<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> i: t;\\n</pre><div class=\\\"info \\\">\\nThe complex number <code class=\\\"code\\\">i</code>.<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> neg: t =&gt; t;\\n</pre><div class=\\\"info \\\">\\nUnary negation.<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> conj: t =&gt; t;\\n</pre><div class=\\\"info \\\">\\nConjugate: given the complex <code class=\\\"code\\\">x + i.y</code>, returns <code class=\\\"code\\\">x - i.y</code>.<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> add: t =&gt; t =&gt; t;\\n</pre><div class=\\\"info \\\">\\nAddition<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> sub: t =&gt; t =&gt; t;\\n</pre><div class=\\\"info \\\">\\nSubtraction<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> mul: t =&gt; t =&gt; t;\\n</pre><div class=\\\"info \\\">\\nMultiplication<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> inv: t =&gt; t;\\n</pre><div class=\\\"info \\\">\\nMultiplicative inverse (<code class=\\\"code\\\">1/z</code>).<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> div: t =&gt; t =&gt; t;\\n</pre><div class=\\\"info \\\">\\nDivision<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> sqrt: t =&gt; t;\\n</pre><div class=\\\"info \\\">\\nSquare root.  The result <code class=\\\"code\\\">x + i.y</code> is such that <code class=\\\"code\\\">x &gt; 0</code> or\\n    <code class=\\\"code\\\">x = 0</code> and <code class=\\\"code\\\">y &gt;= 0</code>.\\n    This function has a discontinuity along the negative real axis.<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> norm2: t =&gt; float;\\n</pre><div class=\\\"info \\\">\\nNorm squared: given <code class=\\\"code\\\">x + i.y</code>, returns <code class=\\\"code\\\">x^2 + y^2</code>.<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> norm: t =&gt; float;\\n</pre><div class=\\\"info \\\">\\nNorm: given <code class=\\\"code\\\">x + i.y</code>, returns <code class=\\\"code\\\">sqrt(x^2 + y^2)</code>.<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> arg: t =&gt; float;\\n</pre><div class=\\\"info \\\">\\nArgument.  The argument of a complex number is the angle\\n    in the complex plane between the positive real axis and a line\\n    passing through zero and the number.  This angle ranges from\\n    <code class=\\\"code\\\">-pi</code> to <code class=\\\"code\\\">pi</code>.  This function has a discontinuity along the\\n    negative real axis.<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> polar: float =&gt; float =&gt; t;\\n</pre><div class=\\\"info \\\">\\n<code class=\\\"code\\\">polar norm arg</code> returns the complex having norm <code class=\\\"code\\\">norm</code>\\n    and argument <code class=\\\"code\\\">arg</code>.<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> exp: t =&gt; t;\\n</pre><div class=\\\"info \\\">\\nExponentiation.  <code class=\\\"code\\\">exp z</code> returns <code class=\\\"code\\\">e</code> to the <code class=\\\"code\\\">z</code> power.<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> log: t =&gt; t;\\n</pre><div class=\\\"info \\\">\\nNatural logarithm (in base <code class=\\\"code\\\">e</code>).<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> pow: t =&gt; t =&gt; t;\\n</pre><div class=\\\"info \\\">\\nPower function.  <code class=\\\"code\\\">pow z1 z2</code> returns <code class=\\\"code\\\">z1</code> to the <code class=\\\"code\\\">z2</code> power.<br>\\n</div>\\n</div>\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"relativePath\": \"api/Complex.html\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---api-complex-html-5bcb3566929e3e0685e2.js","module.exports = {\n\t\"data\": {\n\t\t\"file\": {\n\t\t\t\"relativePath\": \"api/Complex.html\",\n\t\t\t\"childRawHtml\": {\n\t\t\t\t\"content\": \"<div class=\\\"ocamldoc\\\">\\n<div class=\\\"navbar\\\"><a class=\\\"pre\\\" href=\\\"Char.html\\\" title=\\\"Char\\\">Previous</a>\\n&#xA0;<a class=\\\"up\\\" href=\\\"index.html\\\" title=\\\"Index\\\">Up</a>\\n&#xA0;<a class=\\\"post\\\" href=\\\"Digest.html\\\" title=\\\"Digest\\\">Next</a>\\n</div>\\n<h1>Module <a href=\\\"type_Complex.html\\\">Complex</a></h1>\\n\\n<pre><span class=\\\"keyword\\\">module</span> Complex: sig .. end</pre><div class=\\\"info module top\\\">\\nComplex numbers.\\n<p>\\n\\n    This module provides arithmetic operations on complex numbers.\\n    Complex numbers are represented by their real and imaginary parts\\n    (cartesian representation).  Each part is represented by a\\n    double-precision floating-point number (type <code class=\\\"code\\\">float</code>).<br>\\n</p></div>\\n<hr width=\\\"100%\\\">\\n\\n<pre><span class=\\\"keyword\\\">type</span> t = {</pre><table class=\\\"typetable\\\">\\n<tbody><tr>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>&#xA0;&#xA0;</code></td>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>re&#xA0;: float;</code></td>\\n\\n</tr>\\n<tr>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>&#xA0;&#xA0;</code></td>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>im&#xA0;: float;</code></td>\\n\\n</tr></tbody></table>\\n}\\n\\n<div class=\\\"info \\\">\\nThe type of complex numbers.  <code class=\\\"code\\\">re</code> is the real part and <code class=\\\"code\\\">im</code> the\\n    imaginary part.<br>\\n</div>\\n\\n\\n<pre><span class=\\\"keyword\\\">let</span> zero: t;\\n</pre><div class=\\\"info \\\">\\nThe complex number <code class=\\\"code\\\">0</code>.<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> one: t;\\n</pre><div class=\\\"info \\\">\\nThe complex number <code class=\\\"code\\\">1</code>.<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> i: t;\\n</pre><div class=\\\"info \\\">\\nThe complex number <code class=\\\"code\\\">i</code>.<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> neg: t =&gt; t;\\n</pre><div class=\\\"info \\\">\\nUnary negation.<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> conj: t =&gt; t;\\n</pre><div class=\\\"info \\\">\\nConjugate: given the complex <code class=\\\"code\\\">x + i.y</code>, returns <code class=\\\"code\\\">x - i.y</code>.<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> add: t =&gt; t =&gt; t;\\n</pre><div class=\\\"info \\\">\\nAddition<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> sub: t =&gt; t =&gt; t;\\n</pre><div class=\\\"info \\\">\\nSubtraction<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> mul: t =&gt; t =&gt; t;\\n</pre><div class=\\\"info \\\">\\nMultiplication<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> inv: t =&gt; t;\\n</pre><div class=\\\"info \\\">\\nMultiplicative inverse (<code class=\\\"code\\\">1/z</code>).<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> div: t =&gt; t =&gt; t;\\n</pre><div class=\\\"info \\\">\\nDivision<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> sqrt: t =&gt; t;\\n</pre><div class=\\\"info \\\">\\nSquare root.  The result <code class=\\\"code\\\">x + i.y</code> is such that <code class=\\\"code\\\">x &gt; 0</code> or\\n    <code class=\\\"code\\\">x = 0</code> and <code class=\\\"code\\\">y &gt;= 0</code>.\\n    This function has a discontinuity along the negative real axis.<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> norm2: t =&gt; float;\\n</pre><div class=\\\"info \\\">\\nNorm squared: given <code class=\\\"code\\\">x + i.y</code>, returns <code class=\\\"code\\\">x^2 + y^2</code>.<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> norm: t =&gt; float;\\n</pre><div class=\\\"info \\\">\\nNorm: given <code class=\\\"code\\\">x + i.y</code>, returns <code class=\\\"code\\\">sqrt(x^2 + y^2)</code>.<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> arg: t =&gt; float;\\n</pre><div class=\\\"info \\\">\\nArgument.  The argument of a complex number is the angle\\n    in the complex plane between the positive real axis and a line\\n    passing through zero and the number.  This angle ranges from\\n    <code class=\\\"code\\\">-pi</code> to <code class=\\\"code\\\">pi</code>.  This function has a discontinuity along the\\n    negative real axis.<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> polar: float =&gt; float =&gt; t;\\n</pre><div class=\\\"info \\\">\\n<code class=\\\"code\\\">polar norm arg</code> returns the complex having norm <code class=\\\"code\\\">norm</code>\\n    and argument <code class=\\\"code\\\">arg</code>.<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> exp: t =&gt; t;\\n</pre><div class=\\\"info \\\">\\nExponentiation.  <code class=\\\"code\\\">exp z</code> returns <code class=\\\"code\\\">e</code> to the <code class=\\\"code\\\">z</code> power.<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> log: t =&gt; t;\\n</pre><div class=\\\"info \\\">\\nNatural logarithm (in base <code class=\\\"code\\\">e</code>).<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> pow: t =&gt; t =&gt; t;\\n</pre><div class=\\\"info \\\">\\nPower function.  <code class=\\\"code\\\">pow z1 z2</code> returns <code class=\\\"code\\\">z1</code> to the <code class=\\\"code\\\">z2</code> power.<br>\\n</div>\\n</div>\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"relativePath\": \"api/Complex.html\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/api-complex-html.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/api-complex-html.json\n// module chunks = 277"],"sourceRoot":""}