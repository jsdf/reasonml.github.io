webpackJsonp([258],{"./node_modules/json-loader/index.js!./.cache/json/api-index-html.json":function(t,d){t.exports={data:{file:{relativePath:"api/index.html",childRawHtml:{content:'<div class="ocamldoc">\n<h1>Reason API</h1>\n<ul class="indexlist">\n<li><a href="index_types.html">Index of types</a></li>\n<li><a href="index_exceptions.html">Index of exceptions</a></li>\n<li><a href="index_values.html">Index of values</a></li>\n<li><a href="index_attributes.html">Index of class attributes</a></li>\n<li><a href="index_methods.html">Index of class methods</a></li>\n<li><a href="index_classes.html">Index of classes</a></li>\n<li><a href="index_modules.html">Index of modules</a></li>\n<li><a href="index_module_types.html">Index of module types</a></li>\n</ul>\n\n<table class="indextable">\n<tbody><tr><td class="module"><a href="Arg.html">Arg</a></td><td><div class="info">\nParsing of command line arguments.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Array.html">Array</a></td><td><div class="info">\nArray operations.\n</div>\n</td></tr>\n<tr><td class="module"><a href="ArrayLabels.html">ArrayLabels</a></td><td><div class="info">\nArray operations.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Buffer.html">Buffer</a></td><td><div class="info">\nExtensible buffers.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Bytes.html">Bytes</a></td><td><div class="info">\nByte sequence operations.\n</div>\n</td></tr>\n<tr><td class="module"><a href="BytesLabels.html">BytesLabels</a></td><td><div class="info">\nByte sequence operations.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Callback.html">Callback</a></td><td><div class="info">\nRegistering OCaml values with the C runtime.\n</div>\n</td></tr>\n<tr><td class="module"><a href="CamlinternalFormat.html">CamlinternalFormat</a></td><td></td></tr>\n<tr><td class="module"><a href="CamlinternalFormatBasics.html">CamlinternalFormatBasics</a></td><td><div class="info">\n</div>\n</td></tr>\n<tr><td class="module"><a href="CamlinternalLazy.html">CamlinternalLazy</a></td><td><div class="info">\nRun-time support for lazy values.\n</div>\n</td></tr>\n<tr><td class="module"><a href="CamlinternalMod.html">CamlinternalMod</a></td><td><div class="info">\nRun-time support for recursive modules.\n</div>\n</td></tr>\n<tr><td class="module"><a href="CamlinternalOO.html">CamlinternalOO</a></td><td><div class="info">\nRun-time support for objects and classes.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Char.html">Char</a></td><td><div class="info">\nCharacter operations.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Complex.html">Complex</a></td><td><div class="info">\nComplex numbers.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Digest.html">Digest</a></td><td><div class="info">\nMD5 message digest.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Filename.html">Filename</a></td><td><div class="info">\nOperations on file names.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Format.html">Format</a></td><td><div class="info">\nPretty printing.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Gc.html">Gc</a></td><td><div class="info">\nMemory management control and statistics; finalised values.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Genlex.html">Genlex</a></td><td><div class="info">\nA generic lexical analyzer.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Hashtbl.html">Hashtbl</a></td><td><div class="info">\nHash tables and hash functions.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Int32.html">Int32</a></td><td><div class="info">\n32-bit integers.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Int64.html">Int64</a></td><td><div class="info">\n64-bit integers.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Lazy.html">Lazy</a></td><td><div class="info">\nDeferred computations.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Lexing.html">Lexing</a></td><td><div class="info">\nThe run-time library for lexers generated by <code class="code">ocamllex</code>.\n</div>\n</td></tr>\n<tr><td class="module"><a href="List.html">List</a></td><td><div class="info">\nList operations.\n</div>\n</td></tr>\n<tr><td class="module"><a href="ListLabels.html">ListLabels</a></td><td><div class="info">\nList operations.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Map.html">Map</a></td><td><div class="info">\nAssociation tables over ordered types.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Marshal.html">Marshal</a></td><td><div class="info">\nMarshaling of data structures.\n</div>\n</td></tr>\n<tr><td class="module"><a href="MoreLabels.html">MoreLabels</a></td><td><div class="info">\nExtra labeled libraries.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Nativeint.html">Nativeint</a></td><td><div class="info">\nProcessor-native integers.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Obj.html">Obj</a></td><td><div class="info">\nOperations on internal representations of values.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Oo.html">Oo</a></td><td><div class="info">\nOperations on objects\n</div>\n</td></tr>\n<tr><td class="module"><a href="Parsing.html">Parsing</a></td><td><div class="info">\nThe run-time library for parsers generated by <code class="code">ocamlyacc</code>.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Pervasives.html">Pervasives</a></td><td><div class="info">\nThe initially opened module.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Printexc.html">Printexc</a></td><td><div class="info">\nFacilities for printing exceptions and inspecting current call stack.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Printf.html">Printf</a></td><td><div class="info">\nFormatted output functions.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Queue.html">Queue</a></td><td><div class="info">\nFirst-in first-out queues.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Random.html">Random</a></td><td><div class="info">\nPseudo-random number generators (PRNG).\n</div>\n</td></tr>\n<tr><td class="module"><a href="Scanf.html">Scanf</a></td><td><div class="info">\nFormatted input functions.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Set.html">Set</a></td><td><div class="info">\nSets over ordered types.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Sort.html">Sort</a></td><td><div class="info">\n<span class="deprecated">Sorting and merging lists.\n</span></div>\n</td></tr>\n<tr><td class="module"><a href="Stack.html">Stack</a></td><td><div class="info">\nLast-in first-out stacks.\n</div>\n</td></tr>\n<tr><td class="module"><a href="StdLabels.html">StdLabels</a></td><td><div class="info">\nStandard labeled libraries.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Stream.html">Stream</a></td><td><div class="info">\nStreams and parsers.\n</div>\n</td></tr>\n<tr><td class="module"><a href="String.html">String</a></td><td><div class="info">\nString operations.\n</div>\n</td></tr>\n<tr><td class="module"><a href="StringLabels.html">StringLabels</a></td><td><div class="info">\nString operations.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Sys.html">Sys</a></td><td><div class="info">\nSystem interface.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Weak.html">Weak</a></td><td><div class="info">\nArrays of weak pointers and hash tables of weak pointers.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Ast_helper.html">Ast_helper</a></td><td><div class="info">\nHelpers to produce Parsetree fragments\n</div>\n</td></tr>\n<tr><td class="module"><a href="Ast_mapper.html">Ast_mapper</a></td><td><div class="info">\nThe interface of a -ppx rewriter\n</div>\n</td></tr>\n<tr><td class="module"><a href="Asttypes.html">Asttypes</a></td><td></td></tr>\n<tr><td class="module"><a href="Docstrings.html">Docstrings</a></td><td><div class="info">\n(Re)Initialise all docstring state\n</div>\n</td></tr>\n<tr><td class="module"><a href="Lexer.html">Lexer</a></td><td></td></tr>\n<tr><td class="module"><a href="Location.html">Location</a></td><td><div class="info">\nAn arbitrary value of type <code class="code">t</code>; describes an empty ghost range.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Longident.html">Longident</a></td><td></td></tr>\n<tr><td class="module"><a href="Parse.html">Parse</a></td><td></td></tr>\n<tr><td class="module"><a href="Parser.html">Parser</a></td><td></td></tr>\n<tr><td class="module"><a href="Parsetree.html">Parsetree</a></td><td><div class="info">\nAbstract syntax tree produced by parsing\n</div>\n</td></tr>\n<tr><td class="module"><a href="Pprintast.html">Pprintast</a></td><td></td></tr>\n<tr><td class="module"><a href="Printast.html">Printast</a></td><td></td></tr>\n<tr><td class="module"><a href="Syntaxerr.html">Syntaxerr</a></td><td></td></tr>\n<tr><td class="module"><a href="Unix.html">Unix</a></td><td><div class="info">\nInterface to the Unix system.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Str.html">Str</a></td><td><div class="info">\nRegular expressions and high-level string processing\n</div>\n</td></tr>\n<tr><td class="module"><a href="Bigarray.html">Bigarray</a></td><td><div class="info">\nLarge, multi-dimensional, numerical arrays.\n</div>\n</td></tr>\n<tr><td class="module"><a href="Num.html">Num</a></td><td><div class="info">\nOperation on arbitrary-precision numbers.\n</div>\n</td></tr>\n</tbody></table>\n\n</div>'}}},pathContext:{relativePath:"api/index.html"}}}});
//# sourceMappingURL=path---api-index-html-57d694de2a6fdc29acd7.js.map