webpackJsonp([210],{"./node_modules/json-loader/index.js!./.cache/json/api-printast-html.json":function(t,e){t.exports={data:{file:{relativePath:"api/Printast.html",childRawHtml:{content:'<div class="ocamldoc">\n<div class="navbar"><a class="pre" href="Pprintast.html" title="Pprintast">Previous</a>\n&#xA0;<a class="up" href="index.html" title="Index">Up</a>\n&#xA0;<a class="post" href="Syntaxerr.html" title="Syntaxerr">Next</a>\n</div>\n<h1>Module <a href="type_Printast.html">Printast</a></h1>\n\n<pre><span class="keyword">module</span> Printast: sig .. end</pre><hr width="100%">\n\n<pre><span class="keyword">let</span> interface: Format.formatter =&gt; list Parsetree.signature_item =&gt; unit;\n</pre>\n<pre><span class="keyword">let</span> implementation: Format.formatter =&gt; list Parsetree.structure_item =&gt; unit;\n</pre>\n<pre><span class="keyword">let</span> top_phrase: Format.formatter =&gt; Parsetree.toplevel_phrase =&gt; unit;\n</pre>\n<pre><span class="keyword">let</span> expression: int =&gt; Format.formatter =&gt; Parsetree.expression =&gt; unit;\n</pre>\n<pre><span class="keyword">let</span> structure: int =&gt; Format.formatter =&gt; Parsetree.structure =&gt; unit;\n</pre>\n<pre><span class="keyword">let</span> payload: int =&gt; Format.formatter =&gt; Parsetree.payload =&gt; unit;\n</pre></div>'}}},pathContext:{relativePath:"api/Printast.html"}}}});
//# sourceMappingURL=path---api-printast-html-9ad7fbfbc2a928adbc95.js.map