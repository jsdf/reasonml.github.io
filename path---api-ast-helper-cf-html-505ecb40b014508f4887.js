webpackJsonp([318],{"./node_modules/json-loader/index.js!./.cache/json/api-ast-helper-cf-html.json":function(e,t){e.exports={data:{file:{relativePath:"api/Ast_helper.Cf.html",childRawHtml:{content:'<div class="ocamldoc">\n<div class="navbar"><a class="pre" href="Ast_helper.Cl.html" title="Ast_helper.Cl">Previous</a>\n&#xA0;<a class="up" href="Ast_helper.html" title="Ast_helper">Up</a>\n&#xA0;<a class="post" href="Ast_helper.Ci.html" title="Ast_helper.Ci">Next</a>\n</div>\n<h1>Module <a href="type_Ast_helper.Cf.html">Ast_helper.Cf</a></h1>\n\n<pre><span class="keyword">module</span> Cf: sig .. end</pre><div class="info module top">\nClass fields<br>\n</div>\n<hr width="100%">\n\n<pre><span class="keyword">let</span> mk:\n  loc::Ast_helper.loc? =&gt;\n  attrs::Ast_helper.attrs? =&gt;\n  docs::Docstrings.docs? =&gt;\n  Parsetree.class_field_desc =&gt;\n  Parsetree.class_field;\n</pre>\n<pre><span class="keyword">let</span> attr: Parsetree.class_field =&gt; Parsetree.attribute =&gt; Parsetree.class_field;\n</pre>\n<pre><span class="keyword">let</span> inherit_:\n  loc::Ast_helper.loc? =&gt;\n  attrs::Ast_helper.attrs? =&gt;\n  Asttypes.override_flag =&gt;\n  Parsetree.class_expr =&gt;\n  option string =&gt;\n  Parsetree.class_field;\n</pre>\n<pre><span class="keyword">let</span> val_:\n  loc::Ast_helper.loc? =&gt;\n  attrs::Ast_helper.attrs? =&gt;\n  Ast_helper.str =&gt;\n  Asttypes.mutable_flag =&gt;\n  Parsetree.class_field_kind =&gt;\n  Parsetree.class_field;\n</pre>\n<pre><span class="keyword">let</span> method_:\n  loc::Ast_helper.loc? =&gt;\n  attrs::Ast_helper.attrs? =&gt;\n  Ast_helper.str =&gt;\n  Asttypes.private_flag =&gt;\n  Parsetree.class_field_kind =&gt;\n  Parsetree.class_field;\n</pre>\n<pre><span class="keyword">let</span> constraint_:\n  loc::Ast_helper.loc? =&gt;\n  attrs::Ast_helper.attrs? =&gt;\n  Parsetree.core_type =&gt;\n  Parsetree.core_type =&gt;\n  Parsetree.class_field;\n</pre>\n<pre><span class="keyword">let</span> initializer_:\n  loc::Ast_helper.loc? =&gt; attrs::Ast_helper.attrs? =&gt; Parsetree.expression =&gt; Parsetree.class_field;\n</pre>\n<pre><span class="keyword">let</span> extension:\n  loc::Ast_helper.loc? =&gt; attrs::Ast_helper.attrs? =&gt; Parsetree.extension =&gt; Parsetree.class_field;\n</pre>\n<pre><span class="keyword">let</span> attribute: loc::Ast_helper.loc? =&gt; Parsetree.attribute =&gt; Parsetree.class_field;\n</pre>\n<pre><span class="keyword">let</span> text: Docstrings.text =&gt; list Parsetree.class_field;\n</pre>\n<pre><span class="keyword">let</span> virtual_: Parsetree.core_type =&gt; Parsetree.class_field_kind;\n</pre>\n<pre><span class="keyword">let</span> concrete: Asttypes.override_flag =&gt; Parsetree.expression =&gt; Parsetree.class_field_kind;\n</pre></div>'}}},pathContext:{relativePath:"api/Ast_helper.Cf.html"}}}});
//# sourceMappingURL=path---api-ast-helper-cf-html-505ecb40b014508f4887.js.map