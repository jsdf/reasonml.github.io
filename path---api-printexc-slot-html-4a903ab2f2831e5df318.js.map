{"version":3,"sources":["webpack:///path---api-printexc-slot-html-4a903ab2f2831e5df318.js","webpack:///./.cache/json/api-printexc-slot-html.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/api-printexc-slot-html.json","module","exports","data","file","relativePath","childRawHtml","content","pathContext"],"mappings":"AAAAA,cAAc,MAERC,gFACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,MACAC,aAAA,yBACAC,cACAC,QAAA,ogEAIAC,aACAH,aAAA","file":"path---api-printexc-slot-html-4a903ab2f2831e5df318.js","sourcesContent":["webpackJsonp([208],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/api-printexc-slot-html.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"file\": {\n\t\t\t\t\"relativePath\": \"api/Printexc.Slot.html\",\n\t\t\t\t\"childRawHtml\": {\n\t\t\t\t\t\"content\": \"<div class=\\\"ocamldoc\\\">\\n<div class=\\\"navbar\\\">&#xA0;<a class=\\\"up\\\" href=\\\"Printexc.html\\\" title=\\\"Printexc\\\">Up</a>\\n&#xA0;</div>\\n<h1>Module <a href=\\\"type_Printexc.Slot.html\\\">Printexc.Slot</a></h1>\\n\\n<pre><span class=\\\"keyword\\\">module</span> Slot: sig .. end</pre><hr width=\\\"100%\\\">\\n\\n<pre><span class=\\\"keyword\\\">type</span> t = Printexc.backtrace_slot;\\n</pre>\\n\\n\\n<pre><span class=\\\"keyword\\\">let</span> is_raise: t =&gt; bool;\\n</pre><div class=\\\"info \\\">\\n<code class=\\\"code\\\">is_raise slot</code> is <code class=\\\"code\\\">true</code> when <code class=\\\"code\\\">slot</code> refers to a raising\\n      point in the code, and <code class=\\\"code\\\">false</code> when it comes from a simple\\n      function call.<br>\\n<b>Since</b> 4.02<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> location: t =&gt; option Printexc.location;\\n</pre><div class=\\\"info \\\">\\n<code class=\\\"code\\\">location slot</code> returns the location information of the slot,\\n      if available, and <code class=\\\"code\\\">None</code> otherwise.\\n<p>\\n\\n      Some possible reasons for failing to return a location are as follow:</p><ul>\\n<li>the slot corresponds to a compiler-inserted raise</li>\\n<li>the slot corresponds to a part of the program that has not been\\n      compiled with debug information (<code class=\\\"code\\\">-g</code>)</li>\\n</ul>\\n<br>\\n<b>Since</b> 4.02<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> format: int =&gt; t =&gt; option string;\\n</pre><div class=\\\"info \\\">\\n<code class=\\\"code\\\">format pos slot</code> returns the string representation of <code class=\\\"code\\\">slot</code> as\\n      <code class=\\\"code\\\">raw_backtrace_to_string</code> would format it, assuming it is the\\n      <code class=\\\"code\\\">pos</code>-th element of the backtrace: the <code class=\\\"code\\\">0</code>-th element is\\n      pretty-printed differently than the others.\\n<p>\\n\\n      Whole-backtrace printing functions also skip some uninformative\\n      slots; in that case, <code class=\\\"code\\\">format pos slot</code> returns <code class=\\\"code\\\">None</code>.<br>\\n<b>Since</b> 4.02<br>\\n</p></div>\\n</div>\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"relativePath\": \"api/Printexc.Slot.html\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---api-printexc-slot-html-4a903ab2f2831e5df318.js","module.exports = {\n\t\"data\": {\n\t\t\"file\": {\n\t\t\t\"relativePath\": \"api/Printexc.Slot.html\",\n\t\t\t\"childRawHtml\": {\n\t\t\t\t\"content\": \"<div class=\\\"ocamldoc\\\">\\n<div class=\\\"navbar\\\">&#xA0;<a class=\\\"up\\\" href=\\\"Printexc.html\\\" title=\\\"Printexc\\\">Up</a>\\n&#xA0;</div>\\n<h1>Module <a href=\\\"type_Printexc.Slot.html\\\">Printexc.Slot</a></h1>\\n\\n<pre><span class=\\\"keyword\\\">module</span> Slot: sig .. end</pre><hr width=\\\"100%\\\">\\n\\n<pre><span class=\\\"keyword\\\">type</span> t = Printexc.backtrace_slot;\\n</pre>\\n\\n\\n<pre><span class=\\\"keyword\\\">let</span> is_raise: t =&gt; bool;\\n</pre><div class=\\\"info \\\">\\n<code class=\\\"code\\\">is_raise slot</code> is <code class=\\\"code\\\">true</code> when <code class=\\\"code\\\">slot</code> refers to a raising\\n      point in the code, and <code class=\\\"code\\\">false</code> when it comes from a simple\\n      function call.<br>\\n<b>Since</b> 4.02<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> location: t =&gt; option Printexc.location;\\n</pre><div class=\\\"info \\\">\\n<code class=\\\"code\\\">location slot</code> returns the location information of the slot,\\n      if available, and <code class=\\\"code\\\">None</code> otherwise.\\n<p>\\n\\n      Some possible reasons for failing to return a location are as follow:</p><ul>\\n<li>the slot corresponds to a compiler-inserted raise</li>\\n<li>the slot corresponds to a part of the program that has not been\\n      compiled with debug information (<code class=\\\"code\\\">-g</code>)</li>\\n</ul>\\n<br>\\n<b>Since</b> 4.02<br>\\n</div>\\n\\n<pre><span class=\\\"keyword\\\">let</span> format: int =&gt; t =&gt; option string;\\n</pre><div class=\\\"info \\\">\\n<code class=\\\"code\\\">format pos slot</code> returns the string representation of <code class=\\\"code\\\">slot</code> as\\n      <code class=\\\"code\\\">raw_backtrace_to_string</code> would format it, assuming it is the\\n      <code class=\\\"code\\\">pos</code>-th element of the backtrace: the <code class=\\\"code\\\">0</code>-th element is\\n      pretty-printed differently than the others.\\n<p>\\n\\n      Whole-backtrace printing functions also skip some uninformative\\n      slots; in that case, <code class=\\\"code\\\">format pos slot</code> returns <code class=\\\"code\\\">None</code>.<br>\\n<b>Since</b> 4.02<br>\\n</p></div>\\n</div>\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"relativePath\": \"api/Printexc.Slot.html\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/api-printexc-slot-html.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/api-printexc-slot-html.json\n// module chunks = 208"],"sourceRoot":""}