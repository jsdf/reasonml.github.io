webpackJsonp([298],{"./node_modules/json-loader/index.js!./.cache/json/api-ast-helper-typ-html.json":function(e,t){e.exports={data:{file:{relativePath:"api/Ast_helper.Typ.html",childRawHtml:{content:'<div class="ocamldoc">\n<div class="navbar">&#xA0;<a class="up" href="Ast_helper.html" title="Ast_helper">Up</a>\n&#xA0;<a class="post" href="Ast_helper.Pat.html" title="Ast_helper.Pat">Next</a>\n</div>\n<h1>Module <a href="type_Ast_helper.Typ.html">Ast_helper.Typ</a></h1>\n\n<pre><span class="keyword">module</span> Typ: sig .. end</pre><div class="info module top">\nType expressions<br>\n</div>\n<hr width="100%">\n\n<pre><span class="keyword">let</span> mk:\n  loc::Ast_helper.loc? =&gt;\n  attrs::Ast_helper.attrs? =&gt;\n  Parsetree.core_type_desc =&gt;\n  Parsetree.core_type;\n</pre>\n<pre><span class="keyword">let</span> attr: Parsetree.core_type =&gt; Parsetree.attribute =&gt; Parsetree.core_type;\n</pre>\n<pre><span class="keyword">let</span> any: loc::Ast_helper.loc? =&gt; attrs::Ast_helper.attrs? =&gt; unit =&gt; Parsetree.core_type;\n</pre>\n<pre><span class="keyword">let</span> var: loc::Ast_helper.loc? =&gt; attrs::Ast_helper.attrs? =&gt; string =&gt; Parsetree.core_type;\n</pre>\n<pre><span class="keyword">let</span> arrow:\n  loc::Ast_helper.loc? =&gt;\n  attrs::Ast_helper.attrs? =&gt;\n  Asttypes.label =&gt;\n  Parsetree.core_type =&gt;\n  Parsetree.core_type =&gt;\n  Parsetree.core_type;\n</pre>\n<pre><span class="keyword">let</span> tuple:\n  loc::Ast_helper.loc? =&gt;\n  attrs::Ast_helper.attrs? =&gt;\n  list Parsetree.core_type =&gt;\n  Parsetree.core_type;\n</pre>\n<pre><span class="keyword">let</span> constr:\n  loc::Ast_helper.loc? =&gt;\n  attrs::Ast_helper.attrs? =&gt;\n  Ast_helper.lid =&gt;\n  list Parsetree.core_type =&gt;\n  Parsetree.core_type;\n</pre>\n<pre><span class="keyword">let</span> object_:\n  loc::Ast_helper.loc? =&gt;\n  attrs::Ast_helper.attrs? =&gt;\n  list (string, Parsetree.attributes, Parsetree.core_type) =&gt;\n  Asttypes.closed_flag =&gt;\n  Parsetree.core_type;\n</pre>\n<pre><span class="keyword">let</span> class_:\n  loc::Ast_helper.loc? =&gt;\n  attrs::Ast_helper.attrs? =&gt;\n  Ast_helper.lid =&gt;\n  list Parsetree.core_type =&gt;\n  Parsetree.core_type;\n</pre>\n<pre><span class="keyword">let</span> alias:\n  loc::Ast_helper.loc? =&gt;\n  attrs::Ast_helper.attrs? =&gt;\n  Parsetree.core_type =&gt;\n  string =&gt;\n  Parsetree.core_type;\n</pre>\n<pre><span class="keyword">let</span> variant:\n  loc::Ast_helper.loc? =&gt;\n  attrs::Ast_helper.attrs? =&gt;\n  list Parsetree.row_field =&gt;\n  Asttypes.closed_flag =&gt;\n  option (list Asttypes.label) =&gt;\n  Parsetree.core_type;\n</pre>\n<pre><span class="keyword">let</span> poly:\n  loc::Ast_helper.loc? =&gt;\n  attrs::Ast_helper.attrs? =&gt;\n  list string =&gt;\n  Parsetree.core_type =&gt;\n  Parsetree.core_type;\n</pre>\n<pre><span class="keyword">let</span> package:\n  loc::Ast_helper.loc? =&gt;\n  attrs::Ast_helper.attrs? =&gt;\n  Ast_helper.lid =&gt;\n  list (Ast_helper.lid, Parsetree.core_type) =&gt;\n  Parsetree.core_type;\n</pre>\n<pre><span class="keyword">let</span> extension:\n  loc::Ast_helper.loc? =&gt; attrs::Ast_helper.attrs? =&gt; Parsetree.extension =&gt; Parsetree.core_type;\n</pre>\n<pre><span class="keyword">let</span> force_poly: Parsetree.core_type =&gt; Parsetree.core_type;\n</pre></div>'}}},pathContext:{relativePath:"api/Ast_helper.Typ.html"}}}});
//# sourceMappingURL=path---api-ast-helper-typ-html-c25a2d80bd03f4dff74f.js.map