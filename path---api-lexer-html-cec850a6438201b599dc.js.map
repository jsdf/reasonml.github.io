{"version":3,"sources":["webpack:///path---api-lexer-html-cec850a6438201b599dc.js","webpack:///./.cache/json/api-lexer-html.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/api-lexer-html.json","module","exports","data","file","relativePath","childRawHtml","content","pathContext"],"mappings":"AAAAA,cAAc,MAERC,wEACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,MACAC,aAAA,iBACAC,cACAC,QAAA,4iFAIAC,aACAH,aAAA","file":"path---api-lexer-html-cec850a6438201b599dc.js","sourcesContent":["webpackJsonp([249],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/api-lexer-html.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"file\": {\n\t\t\t\t\"relativePath\": \"api/Lexer.html\",\n\t\t\t\t\"childRawHtml\": {\n\t\t\t\t\t\"content\": \"<div class=\\\"ocamldoc\\\">\\n<div class=\\\"navbar\\\"><a class=\\\"pre\\\" href=\\\"Docstrings.html\\\" title=\\\"Docstrings\\\">Previous</a>\\n&#xA0;<a class=\\\"up\\\" href=\\\"index.html\\\" title=\\\"Index\\\">Up</a>\\n&#xA0;<a class=\\\"post\\\" href=\\\"Location.html\\\" title=\\\"Location\\\">Next</a>\\n</div>\\n<h1>Module <a href=\\\"type_Lexer.html\\\">Lexer</a></h1>\\n\\n<pre><span class=\\\"keyword\\\">module</span> Lexer: sig .. end</pre><hr width=\\\"100%\\\">\\n\\n<pre><span class=\\\"keyword\\\">let</span> init: unit =&gt; unit;\\n</pre>\\n<pre><span class=\\\"keyword\\\">let</span> token: Lexing.lexbuf =&gt; Parser.token;\\n</pre>\\n<pre><span class=\\\"keyword\\\">let</span> skip_sharp_bang: Lexing.lexbuf =&gt; unit;\\n</pre>\\n<pre><span class=\\\"keyword\\\">type</span> error = </pre><table class=\\\"typetable\\\">\\n<tbody><tr>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>|</code></td>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>Illegal_character of char</code></td>\\n\\n</tr>\\n<tr>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>|</code></td>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>Illegal_escape of string</code></td>\\n\\n</tr>\\n<tr>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>|</code></td>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>Unterminated_comment of Location.t</code></td>\\n\\n</tr>\\n<tr>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>|</code></td>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>Unterminated_string</code></td>\\n\\n</tr>\\n<tr>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>|</code></td>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>Unterminated_string_in_comment of Location.t * Location.t</code></td>\\n\\n</tr>\\n<tr>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>|</code></td>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>Keyword_as_label of string</code></td>\\n\\n</tr>\\n<tr>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>|</code></td>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>Literal_overflow of string</code></td>\\n\\n</tr></tbody></table>\\n\\n\\n\\n<pre><span class=\\\"keyword\\\">exception</span> Error error Location.t;\\n</pre>\\n\\n<pre><span class=\\\"keyword\\\">let</span> report_error: Format.formatter =&gt; error =&gt; unit;\\n</pre>\\n<pre><span class=\\\"keyword\\\">let</span> in_comment: unit =&gt; bool;\\n</pre>\\n<pre><span class=\\\"keyword\\\">let</span> in_string: unit =&gt; bool;\\n</pre>\\n<pre><span class=\\\"keyword\\\">let</span> print_warnings: Pervasives.ref bool;\\n</pre>\\n<pre><span class=\\\"keyword\\\">let</span> comments: unit =&gt; list (string, Location.t);\\n</pre>\\n<pre><span class=\\\"keyword\\\">let</span> token_with_comments: Lexing.lexbuf =&gt; Parser.token;\\n</pre>\\n<pre><span class=\\\"keyword\\\">let</span> set_preprocessor:\\n  (unit =&gt; unit) =&gt; ((Lexing.lexbuf =&gt; Parser.token) =&gt; Lexing.lexbuf =&gt; Parser.token) =&gt; unit;\\n</pre></div>\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"relativePath\": \"api/Lexer.html\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---api-lexer-html-cec850a6438201b599dc.js","module.exports = {\n\t\"data\": {\n\t\t\"file\": {\n\t\t\t\"relativePath\": \"api/Lexer.html\",\n\t\t\t\"childRawHtml\": {\n\t\t\t\t\"content\": \"<div class=\\\"ocamldoc\\\">\\n<div class=\\\"navbar\\\"><a class=\\\"pre\\\" href=\\\"Docstrings.html\\\" title=\\\"Docstrings\\\">Previous</a>\\n&#xA0;<a class=\\\"up\\\" href=\\\"index.html\\\" title=\\\"Index\\\">Up</a>\\n&#xA0;<a class=\\\"post\\\" href=\\\"Location.html\\\" title=\\\"Location\\\">Next</a>\\n</div>\\n<h1>Module <a href=\\\"type_Lexer.html\\\">Lexer</a></h1>\\n\\n<pre><span class=\\\"keyword\\\">module</span> Lexer: sig .. end</pre><hr width=\\\"100%\\\">\\n\\n<pre><span class=\\\"keyword\\\">let</span> init: unit =&gt; unit;\\n</pre>\\n<pre><span class=\\\"keyword\\\">let</span> token: Lexing.lexbuf =&gt; Parser.token;\\n</pre>\\n<pre><span class=\\\"keyword\\\">let</span> skip_sharp_bang: Lexing.lexbuf =&gt; unit;\\n</pre>\\n<pre><span class=\\\"keyword\\\">type</span> error = </pre><table class=\\\"typetable\\\">\\n<tbody><tr>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>|</code></td>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>Illegal_character of char</code></td>\\n\\n</tr>\\n<tr>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>|</code></td>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>Illegal_escape of string</code></td>\\n\\n</tr>\\n<tr>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>|</code></td>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>Unterminated_comment of Location.t</code></td>\\n\\n</tr>\\n<tr>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>|</code></td>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>Unterminated_string</code></td>\\n\\n</tr>\\n<tr>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>|</code></td>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>Unterminated_string_in_comment of Location.t * Location.t</code></td>\\n\\n</tr>\\n<tr>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>|</code></td>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>Keyword_as_label of string</code></td>\\n\\n</tr>\\n<tr>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>|</code></td>\\n<td align=\\\"left\\\" valign=\\\"top\\\">\\n<code>Literal_overflow of string</code></td>\\n\\n</tr></tbody></table>\\n\\n\\n\\n<pre><span class=\\\"keyword\\\">exception</span> Error error Location.t;\\n</pre>\\n\\n<pre><span class=\\\"keyword\\\">let</span> report_error: Format.formatter =&gt; error =&gt; unit;\\n</pre>\\n<pre><span class=\\\"keyword\\\">let</span> in_comment: unit =&gt; bool;\\n</pre>\\n<pre><span class=\\\"keyword\\\">let</span> in_string: unit =&gt; bool;\\n</pre>\\n<pre><span class=\\\"keyword\\\">let</span> print_warnings: Pervasives.ref bool;\\n</pre>\\n<pre><span class=\\\"keyword\\\">let</span> comments: unit =&gt; list (string, Location.t);\\n</pre>\\n<pre><span class=\\\"keyword\\\">let</span> token_with_comments: Lexing.lexbuf =&gt; Parser.token;\\n</pre>\\n<pre><span class=\\\"keyword\\\">let</span> set_preprocessor:\\n  (unit =&gt; unit) =&gt; ((Lexing.lexbuf =&gt; Parser.token) =&gt; Lexing.lexbuf =&gt; Parser.token) =&gt; unit;\\n</pre></div>\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"relativePath\": \"api/Lexer.html\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/api-lexer-html.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/api-lexer-html.json\n// module chunks = 249"],"sourceRoot":""}