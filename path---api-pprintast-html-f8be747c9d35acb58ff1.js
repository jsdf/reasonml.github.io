webpackJsonp([212],{"./node_modules/json-loader/index.js!./.cache/json/api-pprintast-html.json":function(e,t){e.exports={data:{file:{relativePath:"api/Pprintast.html",childRawHtml:{content:'<div class="ocamldoc">\n<div class="navbar"><a class="pre" href="Parsetree.html" title="Parsetree">Previous</a>\n&#xA0;<a class="up" href="index.html" title="Index">Up</a>\n&#xA0;<a class="post" href="Printast.html" title="Printast">Next</a>\n</div>\n<h1>Module <a href="type_Pprintast.html">Pprintast</a></h1>\n\n<pre><span class="keyword">module</span> Pprintast: sig .. end</pre><hr width="100%">\n\n<pre><span class="keyword">type</span> space_formatter = Pervasives.format unit Format.formatter unit;\n</pre>\n\n\n<pre>class printer : unit -&gt; object .. end</pre>\n<pre><span class="keyword">let</span> default: printer;\n</pre>\n<pre><span class="keyword">let</span> toplevel_phrase: Format.formatter =&gt; Parsetree.toplevel_phrase =&gt; unit;\n</pre>\n<pre><span class="keyword">let</span> expression: Format.formatter =&gt; Parsetree.expression =&gt; unit;\n</pre>\n<pre><span class="keyword">let</span> string_of_expression: Parsetree.expression =&gt; string;\n</pre>\n<pre><span class="keyword">let</span> top_phrase: Format.formatter =&gt; Parsetree.toplevel_phrase =&gt; unit;\n</pre>\n<pre><span class="keyword">let</span> core_type: Format.formatter =&gt; Parsetree.core_type =&gt; unit;\n</pre>\n<pre><span class="keyword">let</span> pattern: Format.formatter =&gt; Parsetree.pattern =&gt; unit;\n</pre>\n<pre><span class="keyword">let</span> signature: Format.formatter =&gt; Parsetree.signature =&gt; unit;\n</pre>\n<pre><span class="keyword">let</span> structure: Format.formatter =&gt; Parsetree.structure =&gt; unit;\n</pre>\n<pre><span class="keyword">let</span> string_of_structure: Parsetree.structure =&gt; string;\n</pre></div>'}}},pathContext:{relativePath:"api/Pprintast.html"}}}});
//# sourceMappingURL=path---api-pprintast-html-f8be747c9d35acb58ff1.js.map